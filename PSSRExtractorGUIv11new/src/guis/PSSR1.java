/*

*/

package guis;

import BlastRequestAtNCBI.BlastRequestWorker;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;


public class PSSR1 extends javax.swing.JFrame {
   private final StringSearchable searchable; 
   private String MIDAS_Last;
   private File PSSR_Last;
   private BlastRequestWorker blast;
   
    public PSSR1() {
         
         ArrayList<String> terms = new ArrayList();
        try {
             try (BufferedInputStream bis = new BufferedInputStream( new FileInputStream("taxdb.ser")); ObjectInputStream ois = new ObjectInputStream(bis)) {
                 terms = (ArrayList<String>) ois.readObject();
             }
        } catch (IOException | ClassNotFoundException e) {
            textArea2.append("Taxonomic DB not found!");
        }
        searchable = new StringSearchable(terms);
        initComponents();
    }
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("pictures/logo.gif"));
        return retValue;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser2 = new javax.swing.JFileChooser();
        jDialog1 = new javax.swing.JDialog();
        jButton2 = new javax.swing.JButton();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jFileChooser3 = new javax.swing.JFileChooser();
        jFrame1 = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jLabel15 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton4 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jSpinner1 = new javax.swing.JSpinner();
        jButton7 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        textArea1 = new java.awt.TextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        textArea2 = new java.awt.TextArea();
        jComboBox2 = new AutocompleteJComboBox(searchable);
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        jFileChooser1.setDialogTitle("Open Sequence File");
        jFileChooser1.setFileFilter(new Filter1());
        jFileChooser1.setName(""); // NOI18N
        jFileChooser1.setPreferredSize(new java.awt.Dimension(482, 297));
        jFileChooser1.getAccessibleContext().setAccessibleName("");

        jFileChooser2.setDialogTitle("Open MIDAS Output File");
        jFileChooser2.setFileFilter(new Filter2());
        jFileChooser2.setPreferredSize(new java.awt.Dimension(482, 297));

        jDialog1.setTitle("About");
        jDialog1.setLocation(new java.awt.Point(300, 200));
        jDialog1.setResizable(false);
        jDialog1.setSize(new java.awt.Dimension(350, 260));
        jDialog1.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/logo.gif"))); // NOI18N
        jButton2.setText("OK");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });
        jDialog1.getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 11, 76, -1));

        label1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label1.setForeground(new java.awt.Color(204, 0, 204));
        label1.setText("PSSRExtractorGUI ver. 1.1");
        jDialog1.getContentPane().add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 11, -1, -1));

        label2.setForeground(new java.awt.Color(0, 0, 0));
        label2.setText("© Carlos Martínez & Alejandro Rivero, 2019");
        jDialog1.getContentPane().add(label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 46, -1, -1));

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("The authors grant to any person the right to\nuse and make copies of this software. The \nsale or the incorporation to any commercial\nsoftware are forbidden. We do not have \nresponsability for damages in the use of this\nsoftware. It is  provided as is and the users\nassume the risk of its use.");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jDialog1.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 76, 278, 130));

        jFileChooser3.setDialogTitle("PSSR Results");
        jFileChooser3.setPreferredSize(new java.awt.Dimension(482, 297));

        jFrame1.setTitle("Proxy Config");
        jFrame1.setAlwaysOnTop(true);
        jFrame1.setIconImage(getIconImage());
        jFrame1.setLocationByPlatform(true);
        jFrame1.setResizable(false);

        jLabel14.setText("User name");

        jScrollPane3.setViewportView(jTextPane2);

        jLabel15.setText("Password");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel15)
                    .add(jPasswordField1)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                    .add(jLabel14))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPasswordField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jButton4.setText("OK");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jCheckBox1.setText("Use system proxy");

        org.jdesktop.layout.GroupLayout jFrame1Layout = new org.jdesktop.layout.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jFrame1Layout.createSequentialGroup()
                .add(jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jFrame1Layout.createSequentialGroup()
                        .add(112, 112, 112)
                        .add(jButton4))
                    .add(jFrame1Layout.createSequentialGroup()
                        .add(84, 84, 84)
                        .add(jCheckBox1)))
                .addContainerGap(91, Short.MAX_VALUE))
            .add(jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jFrame1Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(20, Short.MAX_VALUE)))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jCheckBox1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 150, Short.MAX_VALUE)
                .add(jButton4)
                .add(23, 23, 23))
            .add(jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jFrame1Layout.createSequentialGroup()
                    .add(31, 31, 31)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(52, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Polymorphic SSRs Extractor Pipeline");
        setIconImage(getIconImage());
        setLocation(new java.awt.Point(200, 60));
        setMinimumSize(new java.awt.Dimension(980, 680));
        setSize(new java.awt.Dimension(980, 680));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " MIDAS (SSRs Detection System)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(204, 0, 0))); // NOI18N
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(820, 140));

        jLabel1.setText("Select Sequence File:");

        jLabel2.setText("Max Repeat Unit:");

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("Click to Select...");
        jTextField1.setToolTipText("Select a nt sequence file (FASTA or GBF format)");
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });

        jLabel5.setText("Scoring Schema:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "   (Match = 2, Mismatch = -7, Indel = -7)", "   (Match = 2, Mismatch = -5, Indel = -7)", "   (Match = 2, Mismatch = -5, Indel = -5)", "   (Match = 2, Mismatch = -3, Indel = -5)" }));
        jComboBox1.setToolTipText("Scoring Scheme to perform Wrap-Around Aligment");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(6, 1, 6, 1));
        jSpinner1.setToolTipText("Max repeat unit for SSR detection (max 6, min 1)");

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Check-icon.png"))); // NOI18N
        jButton7.setText("Execute");
        jButton7.setToolTipText("Start SSR detection...");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel7.setText("Logs:");

        textArea1.setEditable(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel2)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSpinner1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 377, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jButton7)
                        .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel7)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(textArea1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jLabel7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(jSpinner1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(34, 34, 34)
                        .add(jButton7))
                    .add(textArea1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 196, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PSSR Extractor (Polymorphic SSRs Analysis System)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 51, 204))); // NOI18N

        jLabel6.setForeground(new java.awt.Color(204, 0, 153));
        jLabel6.setText("MIDAS Output File:");

        jTextField5.setText("Click to Select...");
        jTextField5.setToolTipText("Select a MIDAS ouput file (.mfaa)");
        jTextField5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField5MouseClicked(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(204, 0, 153));
        jLabel3.setText("Organism:");

        jLabel4.setForeground(new java.awt.Color(204, 0, 153));
        jLabel4.setText("Max Target Sequences:");

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(100, 20, 500, 10));
        jSpinner2.setToolTipText("Sets the maximum database matches BLAST saves for a queryto to perform polymorphism analysis");

        jLabel8.setForeground(new java.awt.Color(204, 0, 153));
        jLabel8.setText("Expect Threshold:");

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(30, 30, 100, 5));
        jSpinner3.setToolTipText("Filters out matches that are less significant with Expect value above the setting");

        jLabel9.setText("Identity Percent:");

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(90, 90, 100, 5));
        jSpinner4.setToolTipText("Identity percent in BLAST subjects with the flanks in query SSR");

        jLabel10.setText("Coverage Percent:");

        jSpinner5.setModel(new javax.swing.SpinnerNumberModel(90, 90, 100, 5));
        jSpinner5.setToolTipText("Coverage percent in BLAST subjects with the flanks in query SSR");

        jLabel11.setText("%");

        jLabel12.setText("%");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Check-icon.png"))); // NOI18N
        jButton1.setText("Execute");
        jButton1.setToolTipText("Start Polymorphic SSR detection...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel13.setText("Logs:");

        textArea2.setEditable(false);

        jComboBox2.setToolTipText("Write to autocomplete organism term");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/ar_dfkt.gif"))); // NOI18N
        jButton3.setText("Cancel Request");
        jButton3.setEnabled(false);
        jButton3.setMaximumSize(new java.awt.Dimension(97, 23));
        jButton3.setMinimumSize(new java.awt.Dimension(97, 23));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel6)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel8)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel9)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel10))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jSpinner4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSpinner5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel11)
                            .add(jLabel12))
                        .add(61, 61, 61)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .add(jSpinner2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 390, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 390, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSpinner3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel13)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(textArea2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jLabel13)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel6)
                            .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(jSpinner2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel8)
                            .add(jSpinner3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel9)
                            .add(jSpinner4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel11)
                            .add(jButton1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel10)
                            .add(jSpinner5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel12)
                                .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(textArea2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/exit-icon.png"))); // NOI18N
        jButton5.setText("Exit");
        jButton5.setToolTipText("Exit Applicaton...");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jMenu3.setText("File");

        jMenuItem3.setText("Open Sequence File...");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem5.setText("Open MIDAS Output File...");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem4.setText("Exit");
        jMenuItem4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem4MousePressed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        jMenu1.setText("View");

        jMenuItem7.setText("View Last MIDAS Report...");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem8.setText("View Last PSSRExtractor Report...");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuBar1.add(jMenu1);

        jMenu4.setText("Proxy");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        jMenu2.setText("Help");

        jMenuItem6.setText("Manual");
        jMenuItem6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem6MousePressed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem2.setText("Citation");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem2MousePressed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem1.setText("About");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 960, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton5)
                .add(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(jButton5)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("name");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        jFileChooser1.showDialog(jPanel1, "Open");
        jTextField1.setText(jFileChooser1.getSelectedFile().getAbsolutePath());
        
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
        if (jFileChooser1.getSelectedFile() != null)
        {
            textArea1.append("Sequence File: ".toUpperCase() + jFileChooser1.getSelectedFile().getAbsolutePath()+ '\n');
            textArea1.append("Max Repeat Unit: ".toUpperCase() + jSpinner1.getValue()+ '\n');
            textArea1.append("Model Schema: ".toUpperCase() + jComboBox1.getSelectedItem().toString()+ '\n');
            textArea1.append("Computing.....   ".toUpperCase() + '\n');
            String p2 = String.valueOf(jSpinner1.getValue());
            String p3 = String.valueOf(jComboBox1.getSelectedIndex()+1);
            List<String> comando = Arrays.asList("midas_v1.12.exe", jFileChooser1.getSelectedFile().getAbsolutePath(), p2 , p3 );
            ProcessBuilder pb = new ProcessBuilder().command(comando);
            try {
                Process p = pb.start();
                p.waitFor();
                
            } catch (IOException ex) {
                System.out.println("midas_v1.12.exe problem");
            } catch (InterruptedException ex) {
                Logger.getLogger(PSSR1.class.getName()).log(Level.SEVERE, null, ex);
            }
            textArea1.append("DONE!" +'\n');
            textArea1.append("Look for result files (.mfaa .dat .xls) at " + jFileChooser1.getSelectedFile().getParent() +'\n');
            textArea1.append("--------------------------------------------------------"  +'\n');
            
            File[] files=jFileChooser1.getSelectedFile().getParentFile().listFiles();
            
            for (int i = files.length-1; i >= 0; i--) {
                
                if(files[i].getAbsolutePath().contains(jTextField1.getText()) && files[i].getAbsolutePath().contains(".xls"))
                    MIDAS_Last = files[i].getAbsolutePath();
                else if(files[i].getAbsolutePath().contains(jTextField1.getText()) && files[i].getAbsolutePath().contains(".mfaa")){
                    
                    jTextField5.setText(files[i].getAbsolutePath());
                    break;
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Select a file to process...","Parameter Exception", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
           
        System.exit(0);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MousePressed
       try {
        File path = new File ("PSSR_G&I.pdf");
        Desktop.getDesktop().open(path);
        }catch (IOException ex) {
            ex.getMessage();
}

    }//GEN-LAST:event_jMenuItem2MousePressed

    private void jMenuItem4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem4MousePressed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem4MousePressed

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
       jDialog1.setVisible(true);
    }//GEN-LAST:event_jMenuItem1MousePressed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
       jFileChooser2.showDialog(jPanel1, "Open");
         jTextField5.setText(jFileChooser2.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        jFileChooser1.showDialog(jPanel1, "Open");
         jTextField1.setText(jFileChooser1.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        jDialog1.setVisible(false);
    }//GEN-LAST:event_jButton2MousePressed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
       if (MIDAS_Last != null)
        try {
        File path = new File (MIDAS_Last);
        Desktop.getDesktop().open(path);
        }catch (IOException ex) {
            ex.getMessage();
         }
       else JOptionPane.showMessageDialog(this, "There are not MIDAS results yet","File Exception", JOptionPane.CANCEL_OPTION);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        if (PSSR_Last != null){
        jFileChooser3.setCurrentDirectory(PSSR_Last);
        jFileChooser3.showDialog(jPanel1, "Open");
        try {
        File path = new File (jFileChooser3.getSelectedFile().getAbsolutePath());
        Desktop.getDesktop().open(path);
        }catch (IOException ex) {
            ex.getMessage();
          }
        }
        else JOptionPane.showMessageDialog(this, "There are not PSSRExtractor results yet","File Exception", JOptionPane.CANCEL_OPTION);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        blast.stopCalculus();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jFileChooser2.getSelectedFile() != null && !jComboBox2.getSelectedItem().toString().isEmpty())
        {
           
            textArea2.setText("");
            textArea2.append("MIDAS Output File: ".toUpperCase() + jFileChooser2.getSelectedFile().getAbsolutePath()+ '\n');
            textArea2.append("Organism: ".toUpperCase() + jComboBox2.getSelectedItem()+ '\n');
            textArea2.append("Max Target Sequences: ".toUpperCase() + jSpinner2.getValue()+ '\n');
            textArea2.append("Expect Threshold: ".toUpperCase() + jSpinner3.getValue()+ '\n');
            textArea2.append("Identity Percent: ".toUpperCase() + jSpinner4.getValue()+ '\n');
            textArea2.append("Coverage Percent: ".toUpperCase() + jSpinner5.getValue()+ '\n');
            textArea2.append("-----------------------------------------" + '\n');
            textArea2.append("Submitting BLAST Request & Processing... " + '\n');

            if(jCheckBox1.isSelected())
                BlastRequestWorker.setProxy(jTextPane2.getText(), jPasswordField1.getPassword());
                
             jButton1.setEnabled(false);
             jButton3.setEnabled(true);
           
                try {
                    blast=new BlastRequestWorker(textArea2, jButton1, jButton3,jComboBox2.getSelectedItem().toString(),
                        Integer.parseInt(jSpinner2.getValue().toString()),
                        Integer.parseInt(jSpinner3.getValue().toString()),
                        Float.parseFloat(jSpinner4.getValue().toString()),
                        Float.parseFloat(jSpinner5.getValue().toString()),
                        jTextField5.getText());
                    blast.execute();
                    String File_AP = jFileChooser2.getSelectedFile().getParent() + File.separator +"results_";
                    String File_name = jFileChooser2.getSelectedFile().getName();
                    String File_w_ext = File_name.substring(0, File_name.lastIndexOf(".mfaa")) ;
                    PSSR_Last = new File(File_AP + File_w_ext);

                } catch (NumberFormatException ex) {
                    Logger.getLogger(PSSR1.class.getName()).log(Level.SEVERE, null, ex);
                }        
        }
                
        else
        {
            JOptionPane.showMessageDialog(this, "There are empty fields...","Parameter Exception", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseClicked
        jFileChooser2.showDialog(jPanel1, "Open");
        jTextField5.setText(jFileChooser2.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_jTextField5MouseClicked

    private void jMenuItem6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem6MousePressed
        
        try {
        File path = new File ("manual.pdf");
        Desktop.getDesktop().open(path);
        }catch (IOException ex) {
            ex.getMessage();
        }
    }//GEN-LAST:event_jMenuItem6MousePressed

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        
       Toolkit myScreen=Toolkit.getDefaultToolkit();
        Dimension screenSize=myScreen.getScreenSize();
        
        jFrame1.setSize(screenSize.width/5, screenSize.height/3);
        jFrame1.setLocation((int) (screenSize.width/2.5), screenSize.height/3);
        
        try {
            
            ObjectInputStream objin = new ObjectInputStream(new FileInputStream("proxySave.dat"));
            
            try {
                
                String[]values=new String[4];
                
                values[0]=(String)objin.readObject();
                values[1]=(String)objin.readObject();
                             
                jTextPane2.setText(values[0]);
 
                String value1="";
                
                    for (int i = 0; i < values[1].length(); i++) 
                    { 
                        if(values[1].charAt(i)!=' ' && values[1].charAt(i)!=',' && values[1].charAt(i)!='[' && values[1].charAt(i)!=']')
                            value1+=values[1].charAt(i);
                    } 
 
                jPasswordField1.setText(value1);
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PSSR1.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } catch (IOException ex) {
            Logger.getLogger(PSSR1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jFrame1.setVisible(true);
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
       
        File f=new File("proxySave.dat");
        f.delete();
        
        try {
            
            ObjectOutputStream objout = new ObjectOutputStream(new FileOutputStream("proxySave.dat"));
            
            objout.writeObject(jTextPane2.getText());
            objout.writeObject(Arrays.toString(jPasswordField1.getPassword()));
            
        } catch (IOException ex) {
            Logger.getLogger(PSSR1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jFrame1.setVisible(false);
    }//GEN-LAST:event_jButton4MouseClicked
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (UIManager.LookAndFeelInfo installedLookAndFeel : installedLookAndFeels) {
                if ("Nimbus".equals(installedLookAndFeel.getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeel.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PSSR1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
       //</editor-fold>
       //</editor-fold>
       //</editor-fold>
       //</editor-fold>
       
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PSSR1().setVisible(true);
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JFileChooser jFileChooser3;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextPane jTextPane2;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.TextArea textArea1;
    private java.awt.TextArea textArea2;
    // End of variables declaration//GEN-END:variables
    
}


